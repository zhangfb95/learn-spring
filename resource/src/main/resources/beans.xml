<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan
            base-package="com.keryun.calm.multi.*, com.learn.spring.resource.*"/>
    <aop:aspectj-autoproxy />

    <bean id="writeDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://localhost:3306/test_write"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="3"/>
        <property name="queryTimeout" value="5000"/>
        <property name="transactionQueryTimeout" value="5000"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="45000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="90000"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>

        <property name="validationQuery" value="SELECT NOW()"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="connectionProperties" value="config.decrypt=false"/>

        <!-- 定期保存DruidDataSource的监控记录 -->
        <property name="timeBetweenLogStatsMillis" value="300000"/>
    </bean>

    <bean id="readDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://localhost:3306/test_read"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="3"/>
        <property name="queryTimeout" value="5000"/>
        <property name="transactionQueryTimeout" value="5000"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="45000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="90000"/>

        <property name="validationQuery" value="SELECT NOW()"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>
        <property name="defaultAutoCommit" value="true"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="connectionProperties" value="config.decrypt=false"/>

        <!-- 定期保存DruidDataSource的监控记录 -->
        <property name="timeBetweenLogStatsMillis" value="300000"/>
    </bean>

    <bean id="otherWriteDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://localhost:3306/test_other"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="3"/>
        <property name="queryTimeout" value="5000"/>
        <property name="transactionQueryTimeout" value="5000"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="45000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="90000"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>

        <property name="validationQuery" value="SELECT NOW()"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="connectionProperties" value="config.decrypt=false"/>

        <!-- 定期保存DruidDataSource的监控记录 -->
        <property name="timeBetweenLogStatsMillis" value="300000"/>
    </bean>

    <bean id="otherReadDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://localhost:3306/test_other"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="3"/>
        <property name="queryTimeout" value="5000"/>
        <property name="transactionQueryTimeout" value="5000"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="45000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="90000"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>

        <property name="validationQuery" value="SELECT NOW()"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="connectionProperties" value="config.decrypt=false"/>

        <!-- 定期保存DruidDataSource的监控记录 -->
        <property name="timeBetweenLogStatsMillis" value="300000"/>
    </bean>

    <bean id="defaultGroup" class="com.keryun.calm.multi.ds.config.DsGroup">
        <property name="write" ref="writeDataSource"/>
        <property name="reads">
            <list>
                <ref bean="readDataSource"/>
            </list>
        </property>
    </bean>

    <bean id="otherGroup" class="com.keryun.calm.multi.ds.config.DsGroup">
        <property name="write" ref="otherWriteDataSource"/>
        <property name="reads">
            <list>
                <ref bean="otherReadDataSource"/>
            </list>
        </property>
    </bean>

    <bean id="multiDsGroups" class="com.keryun.calm.multi.ds.config.DsGroups">
        <property name="defaultGroup" ref="defaultGroup"/>
        <property name="otherGroups">
            <map>
                <entry key="other" value-ref="otherGroup"/>
            </map>
        </property>
    </bean>

    <bean class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg index="0" ref="multiDsRoutingDataSource"/>
    </bean>
</beans>